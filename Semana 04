from datetime import datetime

class Paciente:
    def __init__(self, id, nombre, contacto):
        self.id = id
        self.nombre = nombre
        self.contacto = contacto

    def __str__(self):
        return f"Paciente {self.id}: {self.nombre}, Contacto: {self.contacto}"

class Turno:
    def __init__(self, id_paciente, fecha, hora, especialidad):
        self.id_paciente = id_paciente
        self.fecha = fecha
        self.hora = hora
        self.especialidad = especialidad

    def __str__(self):
        return f"Turno para el paciente {self.id_paciente} | {self.fecha} {self.hora} | Especialidad: {self.especialidad}"

class Clinica:
    def __init__(self):
        self.pacientes = {}
        self.turnos = []
        self.cargar_pacientes_iniciales()

    def cargar_pacientes_iniciales(self):
        pacientes_iniciales = [
            {"id": "0912345678", "nombre": "María Fernanda López García", "contacto": "0912345678"},
            {"id": "0923456789", "nombre": "Juan Carlos Pérez Rodríguez", "contacto": "0923456789"},
            {"id": "0934567890", "nombre": "Ana Sofía Martínez Hernández", "contacto": "0934567890"},
            {"id": "0945678901", "nombre": "Luis Alberto Gómez Ramírez", "contacto": "0945678901"}
        ]
        for p in pacientes_iniciales:
            self.registrar_paciente(p["id"], p["nombre"], p["contacto"])

    def registrar_paciente(self, id, nombre, contacto):
        self.pacientes[id] = Paciente(id, nombre, contacto)

    def agendar_turno(self, id_paciente, fecha, hora, especialidad):
        if id_paciente in self.pacientes:
            self.turnos.append(Turno(id_paciente, fecha, hora, especialidad))
        else:
            print(f"Paciente con ID {id_paciente} no encontrado.")

    def mostrar_turnos(self):
        for turno in self.turnos:
            print(turno)

    def consultar_turnos_por_paciente(self, id_paciente):
        turnos_paciente = [turno for turno in self.turnos if turno.id_paciente == id_paciente]
        for turno in turnos_paciente:
            print(turno)

    def cancelar_turno(self, id_paciente, fecha, hora):
        self.turnos = [turno for turno in self.turnos if not (
            turno.id_paciente == id_paciente and turno.fecha == fecha and turno.hora == hora
        )]
        print("Turno cancelado correctamente.")

# Crear una instancia de la clínica y mostrar los pacientes registrados
clinica = Clinica()

print("Pacientes iniciales registrados:")
for paciente in clinica.pacientes.values():
    print(paciente)
